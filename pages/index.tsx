import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import ReactMarkDown from "react-markdown";
import gfm from "remark-gfm";
import { GetStaticProps, NextPage } from "next";
import fs from "fs";
import path from "path";
import { Prism as SyntaxHighlighter } from "react-syntax-highlighter";
import { darcula } from "react-syntax-highlighter/dist/cjs/styles/prism";
import ReactMarkdown from "react-markdown";

type StaticProps = {
  md: string;
};

const Home: NextPage<StaticProps> = (props) => {
  return (
    <div>
      <Head>
        <title>Markdownの型定義について</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/github-markdown-css@3.0.1/github-markdown.min.css"
        />
      </Head>

      <main>
        <div className="markdown-body">
          <ReactMarkDown
            remarkPlugins={[gfm]}
            components={{
              code: ({ node, inline, className, children, ...props }) => {
                const match = /language-(\w+)/.exec(className || "");
                return !inline && match ? (
                  <SyntaxHighlighter
                    style={darcula}
                    language={match[1]}
                    PreTag="div"
                    children={String(children).replace(/\n$/, "")}
                    {...props}
                  />
                ) : (
                  <code className={className} {...props}>
                    {children}
                  </code>
                );
              },
            }}
          >
            {props.md}
          </ReactMarkDown>
        </div>
      </main>
    </div>
  );
};
export default Home;

export const getStaticProps: GetStaticProps = async () => {
  const md = fs.readFileSync(path.join(process.cwd(), "main.md"), "utf-8");
  return { props: { md } };
};
